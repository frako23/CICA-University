"""empty message

Revision ID: 7aa8ccfab41a
Revises: 
Create Date: 2024-05-08 06:06:10.524540

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7aa8ccfab41a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('img_url', sa.String(length=250), nullable=False),
    sa.Column('link_url', sa.String(length=250), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tag', sa.Enum('white', 'black', 'blue', 'grey', 'green', 'yellow', 'orange', 'pink', 'purple', 'red', name='color'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('lastname', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=120), nullable=False),
    sa.Column('salt', sa.String(length=80), nullable=False),
    sa.Column('role', sa.Enum('admin', 'manager', 'associated', name='role'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='status'), nullable=True),
    sa.Column('sales_goal', sa.Integer(), nullable=True),
    sa.Column('manager', sa.String(length=100), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('gpt_coins', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('cliente',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('birthdate', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('cellphone', sa.String(length=50), nullable=True),
    sa.Column('amount', sa.String(length=20), nullable=True),
    sa.Column('trust', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('tag', sa.Enum('white', 'black', 'blue', 'grey', 'green', 'yellow', 'orange', 'pink', 'purple', 'red', name='color'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('approved', 'not_approved', name='paymentstatus'), nullable=True),
    sa.Column('payment_method', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company', sa.String(length=50), nullable=False),
    sa.Column('product_name', sa.String(length=50), nullable=False),
    sa.Column('product_type', sa.String(length=50), nullable=False),
    sa.Column('product_description', sa.String(length=1000), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tarea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task', sa.String(length=250), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account__information',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client__activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('contact_type', sa.Enum('llamada', 'mensaje', 'cita', name='tipodecontacto'), nullable=False),
    sa.Column('comment', sa.String(length=250), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['cliente.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client__products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.String(length=30), nullable=False),
    sa.Column('date_of_closing', sa.String(length=10), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('payment_recurrence', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['cliente.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('client__products')
    op.drop_table('client__activity')
    op.drop_table('account__information')
    op.drop_table('tarea')
    op.drop_table('products')
    op.drop_table('payment')
    op.drop_table('cliente')
    op.drop_table('user')
    op.drop_table('courses')
    # ### end Alembic commands ###
