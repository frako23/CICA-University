"""empty message

Revision ID: 0deb853b4c19
Revises: bf9a7b99fe39
Create Date: 2024-03-20 18:19:05.144570

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0deb853b4c19'
down_revision = 'bf9a7b99fe39'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_type', sa.String(length=50), nullable=False),
    sa.Column('company', sa.String(length=50), nullable=False),
    sa.Column('product_name', sa.String(length=50), nullable=False),
    sa.Column('product_type', sa.String(length=50), nullable=False),
    sa.Column('product_description', sa.String(length=1000), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client__products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.String(length=30), nullable=False),
    sa.Column('date_of_closing', sa.String(length=10), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('payment_recurrence', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['cliente.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('client__policies')
    op.drop_table('policies_names')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('policies_names',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('policy_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('policy_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('company', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('manager_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='policies_names_pkey')
    )
    op.create_table('client__policies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('policy_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('policy_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('policy_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('date_of_issue', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('payment_method', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['cliente.id'], name='client__policies_client_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='client__policies_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='client__policies_pkey')
    )
    op.drop_table('client__products')
    op.drop_table('products')
    # ### end Alembic commands ###
